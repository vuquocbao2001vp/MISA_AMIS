/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else {
		var a = factory();
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(self, () => {
return /******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/***/ ((module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst directive = {\r\n    beforeMount(element, bind, vn) {\r\n        var _a;\r\n        const isDirectiveValueFunction = ((_a = bind === null || bind === void 0 ? void 0 : bind.value) === null || _a === void 0 ? void 0 : _a.constructor.name) === 'Function';\r\n        if (!isDirectiveValueFunction) {\r\n            throw Error('[v-click-outside-element] Function should be provided in the directive');\r\n        }\r\n        element.clickOutside = event => {\r\n            if (event.target instanceof Element) {\r\n                if (!(element === event.target || element.contains(event.target))) {\r\n                    bind.value(event);\r\n                }\r\n            }\r\n        };\r\n        window.addEventListener('click', element.clickOutside);\r\n    },\r\n    beforeUnmount(element) {\r\n        window.removeEventListener('click', element.clickOutside);\r\n    }\r\n};\r\nconst plugin = {\r\n    install(Vue, name = 'click-outside-element') {\r\n        Vue.directive(name, directive);\r\n    }\r\n};\r\nmodule.exports = plugin;\r\nexports = module.exports;\r\nexports.directive = directive;\r\n\n\n//# sourceURL=webpack://vue-click-outside-element/./src/index.ts?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.ts");
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});