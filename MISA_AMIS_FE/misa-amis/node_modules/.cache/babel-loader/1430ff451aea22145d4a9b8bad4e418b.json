{"ast":null,"code":"import { normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-1a08d560\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  key: 1,\n  class: \"toast-icon\"\n};\nconst _hoisted_2 = {\n  class: \"toast-text\"\n};\nconst _hoisted_3 = {\n  class: \"toast-text-content\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass([\"toast-message\", {\n      'hide-toast': $props.isHideToast\n    }])\n  }, [$props.toastType == 'success' ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: _normalizeClass([\"toast-icon\", {\n      'icon-toast-success': $props.toastType\n    }])\n  }, null, 2\n  /* CLASS */\n  )) : _createCommentVNode(\"v-if\", true), $props.toastType == 'fail' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\" <span class=\\\"toast-text-header\\\">{{title}}</span> \"), _createElementVNode(\"span\", _hoisted_3, _toDisplayString($props.text), 1\n  /* TEXT */\n  )])], 2\n  /* CLASS */\n  );\n}","map":{"version":3,"mappings":";;;;;;EAGSA,KAAK,EAAC;;;EACNA,KAAK,EAAC;;;EAEHA,KAAK,EAAC;;;uBALhBC,oBAOM,KAPN,EAOM;IAPDD,KAAK,mBAAC,eAAD,EAAgB;MAAA,cAAwBE;IAAxB,CAAhB;EAOJ,CAPN,GACgCA,oBAAS,2BAAvCD,oBAAwG,KAAxG,EAAwG;UAAA;IAAnGD,KAAK,mBAAC,YAAD,EAAa;MAAA,sBAA8DE;IAA9D,CAAb;EAA8F,CAAxG;;EAAA,wCAC8BA,oBAAS,wBAAvCD,oBAA0D,KAA1D,oDACAE,oBAGM,KAHN,cAGM,CAFJC,2EAEI,EADJD,oBAAgD,MAAhD,cAAgDE,iBAAbH,WAAa,CAAhD,EAAuC;EAAA;EAAvC,CACI,CAHN,EAHF;;EAAA","names":["class","_createElementBlock","$props","_createElementVNode","_createCommentVNode","_toDisplayString"],"sourceRoot":"","sources":["E:\\MisaProject\\MISA_AMIS\\MISA_AMIS_FE\\misa-amis\\src\\components\\base\\toast\\MToast.vue"],"sourcesContent":["<template>\r\n  <div class=\"toast-message\" :class=\"{'hide-toast': isHideToast}\">\r\n    <div class=\"toast-icon\" v-if=\"toastType == 'success'\" :class=\"{'icon-toast-success': toastType }\"></div>\r\n    <div class=\"toast-icon\" v-if=\"toastType == 'fail'\" ></div>\r\n    <div class=\"toast-text\">\r\n      <!-- <span class=\"toast-text-header\">{{title}}</span> -->\r\n      <span class=\"toast-text-content\">{{text}}</span>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n    props: ['isHideToast','toastType', 'text']\r\n};\r\n</script>\r\n<style scoped>\r\n.hide-toast {\r\n  display: none !important;\r\n}\r\n\r\n.toast-message {\r\n  position: fixed;\r\n  top: 40px;\r\n  right: 40px;\r\n  height: 56px;\r\n  min-width: 300px;\r\n  display: flex;\r\n  align-items: center;\r\n  border-radius: 4px;\r\n  border-left: 4px solid;\r\n  border-left-color: green;\r\n  box-shadow: 1px 0.5px 1px 1px rgb(200, 200, 200);\r\n  box-sizing: border-box;\r\n  background-color: #fff;\r\n}\r\n\r\n.toast-icon {\r\n  width: 40px;\r\n  height: 40px;\r\n  margin: 0 18px;\r\n}\r\n\r\n.toast-text {\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 40px;\r\n  width: max;\r\n}\r\n\r\n.toast-text-header {\r\n  /* font-family: OpenSans-Bold; */\r\n  font-size: 18px;\r\n  line-height: 16px;\r\n  margin-bottom: 4px;\r\n}\r\n\r\n.toast-text-content {\r\n  font-size: 14px;\r\n}\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}