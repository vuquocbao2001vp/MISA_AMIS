{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-00d49caf\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = [\"tabindex\", \"checked\"];\n\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"checkmark\"\n}, null, -1\n/* HOISTED */\n));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"label\", _hoisted_1, [_createTextVNode(_toDisplayString($props.title) + \" \", 1\n  /* TEXT */\n  ), _createElementVNode(\"input\", {\n    type: \"radio\",\n    tabindex: $props.tabindex,\n    checked: $props.isCheck,\n    name: \"radio\"\n  }, null, 8\n  /* PROPS */\n  , _hoisted_2), _hoisted_3]);\n}","map":{"version":3,"mappings":";;;;;EACWA,KAAK,EAAC;;;;gEAETC,oBAA+B,MAA/B,EAA+B;EAAzBD,KAAK,EAAC;AAAmB,CAA/B,EAAuB,IAAvB,EAAuB;AAAA;AAAvB;;;uBAFJE,oBAGQ,OAHR,cAGQ,mCAHmBC,gBAAO,KAC9B;EAAA;GAEI,EAFJF,oBAA+E,OAA/E,EAA+E;IAAxEG,IAAI,EAAC,OAAmE;IAA1DC,QAAQ,EAAEF,eAAgD;IAA/BG,OAAO,EAAEH,cAAsB;IAAbI,IAAI,EAAC;EAAQ,CAA/E;;EAAA,aAEI,EADJC,UACI,CAHR","names":["class","_createElementVNode","_createElementBlock","$props","type","tabindex","checked","name","_hoisted_3"],"sourceRoot":"","sources":["E:\\MisaProject\\MISA_AMIS\\MISA_AMIS_FE\\misa-amis\\src\\components\\base\\checkbox\\MRadioCheckbox.vue"],"sourcesContent":["<template>\r\n    <label class=\"container\">{{title}}\r\n        <input type=\"radio\" :tabindex=\"tabindex\" v-bind:checked=\"isCheck\" name=\"radio\">\r\n        <span class=\"checkmark\"></span>\r\n    </label>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    props: ['title', 'isCheck', 'tabindex']\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  display: flex;\r\n  align-items: center;\r\n  position: relative;\r\n  cursor: pointer;\r\n  font-size: 13px;\r\n  font-weight: 400;\r\n  padding-left: 32px;\r\n  padding-top: 2px;\r\n  -webkit-user-select: none;\r\n  -moz-user-select: none;\r\n  -ms-user-select: none;\r\n  user-select: none;\r\n  margin-right: 20px;\r\n}\r\n\r\n/* Hide the browser's default radio button */\r\n.container input {\r\n  position: absolute;\r\n  opacity: 0;\r\n  cursor: pointer;\r\n}\r\n\r\n/* Create a custom radio button */\r\n.checkmark {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  height: 18px;\r\n  width: 18px;\r\n  background-color: #fff;\r\n  border-radius: 50%;\r\n  border: 1px solid #ccc\r\n}\r\n\r\n\r\n/* When the radio button is checked, add a blue background */\r\n.container input:checked ~ .checkmark {\r\n  border-color: #2ca01c;\r\n}\r\n\r\n/* Create the indicator (the dot/circle - hidden when not checked) */\r\n.checkmark:after {\r\n  content: \"\";\r\n  position: absolute;\r\n  display: none;\r\n}\r\n\r\n/* Show the indicator (dot/circle) when checked */\r\n.container input:checked ~ .checkmark:after {\r\n  display: block;\r\n}\r\n\r\n/* Style the indicator (dot/circle) */\r\n.container .checkmark:after {\r\n    top: 4px;\r\n\tleft: 4px;\r\n\twidth: 10px;\r\n\theight: 10px;\r\n\tborder-radius: 50%;\r\n\tbackground: #2ca01c;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}