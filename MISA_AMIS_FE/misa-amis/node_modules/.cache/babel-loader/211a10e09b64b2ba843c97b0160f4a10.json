{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// import EmployeeList from \"../../pages/Employee/EmployeeList.vue\";\n// import EmployeeHeader from \"../../pages/Employee/EmployeeHeader.vue\";\nimport axios from \"axios\";\nimport formatDate from \"../../extension/formatDate\";\nimport formatCurrency from \"../../extension/formatCurrency\";\nimport formatPhoneNumber from \"../../extension/fomartPhoneNumber\";\nimport EmployeeDetail from \"./EmployeeDetail.vue\";\nimport PreLoadingTable from \"../../components/base/PreLoadingTable.vue\";\nimport TableExpand from \"../../components/base/TableExpand.vue\"; // import { createToast } from \"mosha-vue-toastify\";\n\nimport \"mosha-vue-toastify/dist/style.css\";\nimport ClickOutside from \"vue-click-outside\";\nimport baseApi from \"../../base/baseApi/baseApi\";\nimport ModalButtons from \"../../components/base/ModalButtons.vue\";\nimport { createToast } from \"mosha-vue-toastify\"; // Enums\n\nimport MessageApi from \"../../Enums/enumMessageApi\";\nimport Notifications from \"../../Enums/enumNotification\";\nimport { saveExcel } from \"@progress/kendo-vue-excel-export\";\nexport default {\n  name: \"EmployeeList\",\n  components: {\n    EmployeeDetail,\n    PreLoadingTable,\n    TableExpand,\n    ModalButtons\n  },\n  methods: {\n    exportExcel() {\n      saveExcel({\n        data: this.employees,\n        fileName: \"myFile\",\n        columns: [{\n          field: \"STT\"\n        }, {\n          field: \"Mã nhân viên\",\n          title: \"Nhân viên\"\n        }, {\n          field: \"Tên nhân viên\",\n          title: \"Nhân viên\"\n        }, {\n          field: \"Giới tính\",\n          title: \"Nhân viên\"\n        }, {\n          field: \"Ngày sinh\",\n          title: \"Nhân viên\"\n        }, {\n          field: \"Chức danh\",\n          title: \"Nhân viên\"\n        }, {\n          field: \"Tên đơn vị\",\n          title: \"Nhân viên\"\n        }, {\n          field: \"Tên ngân hàng\",\n          title: \"Nhân viên\"\n        }, {\n          field: \"Số tài khoản\",\n          title: \"Nhân viên\"\n        }]\n      });\n    },\n\n    baseApi,\n    formatDate,\n    formatCurrency,\n    formatPhoneNumber,\n\n    /*\n     ** Reload lại trang\n     ** Author PQBinh(10/7/2022)\n     */\n    reloadData() {\n      // console.log(\"reload\");\n      this.loadData();\n    },\n\n    // Khi bấm vào nút thêm mới nhân viên sẽ   mở ra dialog và lấy mã nhân viên mới\n    //Author PQBinh(10/7/2022)\n    btnAddClick() {\n      this.showDialog(true);\n      this.employeeSelected = {};\n      this.editMore = 0;\n    },\n\n    // gán giá trị cho biến IshowDiaLog\n    //Author PQBinh(10/7/2022)\n    showDialog(isShow) {\n      this.IsShowDialog = isShow;\n    },\n\n    // khi click vào 1 hàng sẽ đặt giá trị cho biến employeeS Selected\n    //Author PQBinh(10/7/2022)\n    rowOnClick(emp) {\n      this.employeeSelected = emp;\n    },\n\n    /*\n     ** Khi double click vào dòng của bảng sẽ hiện lên chi tiết nhân viên\n     ** Author PQBinh(10/7/2022)\n     */\n    rowOnDbClick(emp) {\n      this.employeeSelected = emp;\n      this.IsShowDialog = true;\n      this.editMore = 1;\n      this.$nextTick(function () {\n        document.getElementById(\"formCode\").focus();\n      });\n    },\n\n    // Khi bấm vào nút xổ xuống sẽ hiện ra chi tiết các nút trong bảng table\n    //Author PQBinh(10/7/2022)\n    detailBtnRow: function (event) {\n      this.IsOpenTableExpand = true;\n      var btnDetail = event.target.getBoundingClientRect();\n      this.pos.top = btnDetail.top + 20;\n      this.pos.left = btnDetail.left - 50;\n    },\n\n    hideDetailBtnRow() {\n      this.IsOpenTableExpand = false;\n    },\n\n    //Xóa một nhân viên được chọn\n    // author PQBinh (10/7/2022)\n    btnDelete() {\n      this.IsOpenTableExpand = false;\n      this.errMsg = [];\n      var mess = `${Notifications.ConfimDelete} <${this.employeeSelected.employeeCode}> không? `;\n      this.errMsg.push(mess);\n      this.IsShowModalDelete = true;\n    },\n\n    // Xác nhận xóa nhân viên đó khi modal hiện lên\n    //Author PQBinh(10/7/2022)\n    confirmDelete() {\n      var url = `http://localhost:5240/api/v1/Employees?id=${this.employeeSelected.employeeId}`;\n      this.baseApi(\"delete\", url, this.employeeSelected.employeeId);\n      createToast(MessageApi.Delete);\n      this.IsShowModalDelete = false;\n      this.reloadData();\n    },\n\n    // Xác nhận hủy khi modal thông báo có xác nhận xóa nhân viên đó không\n    // Author PQBinh(10/7/2022)\n    confirmCancleDelete() {\n      this.IsShowModalDelete = false;\n    },\n\n    /*\n     ** Khi bấm vào nút import sẽ chọn file để import\n     ** Author PQBinh(10/7/2022)\n     */\n    btnImportClick() {\n      this.$refs.fileImport.click();\n    },\n\n    // Lấy file chọn khi import để gửi lên Api\n    //Author PQBinh(10/7/2022)\n    btnImportFileClick: function () {\n      var formData = new FormData();\n      var file = document.getElementById(\"fileImport\").files[0];\n      formData.append(\"fileImport\", file);\n      console.log(formData); // try {\n      //   axios\n      //     .post(\"http://localhost:5240/api/v1/Employees/import\", formData, {\n      //       headers: {\n      //         \"Content-Type\": \"multipart/form-data\",\n      //       },\n      //     })\n      //     .then(function (res) {\n      //       createToast(MessageApi.Post);\n      //       console.log(res);\n      //     });\n      // } catch (er) {\n      //   console.log(er);\n      // }\n      // console.log(document.getElementById(\"fileImport\").files[0]);\n    },\n\n    /*\n     ** Load dữ liệu với các dữ liệu như tìm kiếm, số trang\n     ** Author PQBinh(10/7/2022)\n     */\n    loadData() {\n      var me = this;\n      me.IsCompleteData = true;\n\n      try {\n        var config = {\n          method: \"get\",\n          url: `http://localhost:5240/api/v1/Employees/filter/?pageIndex=${me.pageIndex}&pageSize=${me.pageSize}`,\n          headers: {\n            \"Content-Type\": \"application/json\",\n            accept: \"application/json\"\n          }\n        };\n\n        if (me.filter != null) {\n          config.url += `&filter=${me.filter}`;\n        }\n\n        axios(config).then(function (res) {\n          me.employees = res.data.data;\n          me.totalRecord = res.data.totalRecord;\n          me.IsCompleteData = false;\n        }).catch(function (res) {\n          console.log(res);\n        });\n      } catch (er) {\n        console.log(er);\n      } //Kiểm tra xem pageIndex có phải 1 hay trang cuối cùng hay không để thêm css\n\n    },\n\n    /*\n     ** hiện các lựa chọn của pagging\n     ** Author PQBinh(10/7/2022)\n     */\n    btnPaggingDetail() {\n      this.IsShowPaging = !this.IsShowPaging; //\n    },\n\n    /*\n     ** phân trang với kích thước trang là tham số truyền vào\n     ** Author PQBinh(10/7/2022)\n     */\n    btnPagging(size) {\n      var me = this;\n      me.pageSize = size;\n      me.loadData();\n      me.btnPaggingDetail();\n    },\n\n    /*\n     ** Khi bấm vào nút tiếp để sang trang tiếp\n     ** Author PQBinh(10/7/2022)\n     */\n    btnNextPageClick() {\n      var me = this;\n\n      if (me.pageIndex < me.totalRecord / me.pageSize) {\n        me.pageIndex = me.pageIndex + 1;\n        me.loadData();\n      }\n    },\n\n    /*\n     ** Khi bấm vào nút trước để quay lại trang trước\n     ** Author PQBinh(10/7/2022)\n     */\n    btnPrevPageClick() {\n      var me = this;\n\n      if (me.pageIndex > 1) {\n        me.pageIndex = me.pageIndex - 1;\n        me.loadData();\n      }\n    },\n\n    /*\n     ** Khi bấm vào nút tìm kiếm dữ liệu employe với từ tìm kiếm\n     ** Author PQBinh(10/7/2022)\n     */\n    btnSearchClick() {\n      this.filter = document.getElementById(\"search\").value;\n      this.pageIndex = 1;\n      this.loadData();\n    },\n\n    // Khi bấm vào nút chọn tất cả của table\n    // param: employee: tất cả nhân viên hiện có trên bảng\n    //Author PQBinh(10/7/2022)\n    chooseALlClick(employees) {\n      if (this.tickAll == 1) {\n        this.tickAll = 0;\n        this.employeeTicked = [];\n      } else {\n        this.tickAll = 1;\n        employees.forEach(emp => {\n          this.employeeTicked.push(emp.employeeId);\n          return emp.employeeId;\n        });\n      }\n\n      if (this.employeeTicked.length == 0) {\n        this.IsShowDeleteMutile = false;\n      }\n    },\n\n    // Hiện ra nút xóa hàng loạt\n    //Author PQBinh(10/7/2022)\n    showBtnDelete() {\n      if (document.querySelector(\"#tickboxRow:checked\") != null) {\n        this.IsShowDeleteMutile = !this.IsShowDeleteMutile;\n      }\n    },\n\n    // Khi bấm tích chọn của 1 hàng table sẽ tích chọn hàng đó nếu chưa có thì sẽ thêm vào ,\n    // nếu đã có sẽ bỏ ra khỏi danh sách các hàng được tích chọn\n    //params: id: id nút của tích chọn\n    //Author PQBinh(10/7/2022)\n    tickEmployeeClick(id) {\n      var listId = this.employeeTicked;\n      var index = listId.indexOf(id); // var row = document.getElementsByClassName(\"body-table-list\");\n      // console.log(\"index\", index, \"/n row\", row[0].children[0]);\n\n      if (index == -1) {\n        listId.push(id);\n      } else {\n        listId.splice(index, 1);\n      }\n\n      this.employeeSelected = listId;\n      var index_ = listId.indexOf(id);\n      var row = document.getElementsByClassName(\"body-table-list\");\n      row[0].children[index_].getElementsByClassName(\"row-tick-table\").focus;\n\n      if (listId.length == 0) {\n        this.IsShowDeleteMutile = false;\n      }\n    },\n\n    //Khi nút xóa hàng loạt được click sẽ xác nhận xóa các nhân viên được tích chọn\n    //Author PQBinh(10/7/2022)\n    deleteMutileClick() {\n      try {\n        this.employeeTicked.forEach(item => {\n          var url = `http://localhost:5240/api/v1/Employees?id=${item}`;\n          this.baseApi(\"delete\", url, item);\n        });\n        createToast(MessageApi.Delete);\n        this.IsShowDeleteMutile = false;\n      } catch (ex) {\n        console.log(ex);\n      }\n    },\n\n    //Khi nút nhân bản được click\n    //Author PQBinh(10/7/2022)\n    btnDouple() {\n      var me = this;\n      me.rowOnDbClick(me.employeeSelected);\n      this.IsOpenTableExpand = false;\n      me.isDouple = 1;\n    },\n\n    // Khi nút ngừng phát triển được click\n    //Author PQBinh(10/7/2022)\n    btnTableExpand() {\n      this.IsOpenTableExpand = false;\n      alert(\"Tính năng đang được phát triển\");\n    },\n\n    //Xuất khẩu dữ liệu ra file excel\n    //Author PQBinh - 24/7/2022\n    exportData() {\n      /* Get the HTML data using Element by Id */\n      var table = document.getElementById(\"tableEmployee\");\n      /* Declaring array variable */\n\n      var rows = []; //header của table\n\n      rows.push([\"STT\", \"Mã nhân viên\", \"Tên nhân viên\", \"Giới tính\", \"Ngày sinh\", \"Chức danh\", \"Tên đơn vị\", \"Số tài khoản\", \"Tên ngân hàng\"]); //iterate through rows of table\n\n      for (var i = 1, row; row = table.rows[i]; i++) {\n        //rows would be accessed using the \"row\" variable assigned in the for loop\n        //Get each cell value/column from the row\n        let column1 = i;\n        let column2 = row.cells[1].innerText.toString();\n        let column3 = row.cells[2].innerText.toString();\n        let column4 = row.cells[3].innerText.toString();\n        let column5 = row.cells[4].innerText.toString();\n        /* add a new records in the array */\n\n        rows.push([column1, column2, column3, column4, column5]);\n      }\n\n      var csvContent = \"data:text/csv;charset=utf-8,\";\n      /* add the column delimiter as comma(,) and each row splitted by new line character (\\n) */\n\n      rows.forEach(function (rowArray) {\n        row = rowArray.join(\",\");\n        csvContent += row + \"\\r\\n\";\n      });\n      console.log(csvContent); // create a hidden <a> DOM node and set its download attribute */\n\n      var encodedUri = encodeURI(csvContent);\n      var link = document.createElement(\"a\");\n      link.setAttribute(\"href\", encodedUri);\n      link.setAttribute(\"download\", \"test.csv\");\n      document.body.appendChild(link); // /* download the data file named \"Stock_Price_Report.csv\" */\n\n      link.click(); // var CsvString = \"\";\n      // CsvString = \"data:application/csv,\" + encodeURIComponent(rows);\n      // var x = document.createElement(\"A\");\n      // x.setAttribute(\"href\", CsvString);\n      // x.setAttribute(\"download\", \"somedata.csv\");\n      // document.body.appendChild(x);\n      // x.click();\n    }\n\n  },\n\n  data() {\n    return {\n      IsShowDialog: false,\n      // biến có mở dialog\n      IsShowDetailBtn: 0,\n      // biến có mở nút xóa\n      employees: [],\n      // danh sách các nhân viên được trả về khi loadData\n      employeeSelected: {},\n      // đối tượng nhân viên được click\n      editMore: 0,\n      // biến kiểm tra có phải sửa hay thêm mới dữ liệu: sửa là 0;\n      IsCompleteData: true,\n      // biến load dữ liệu thành công\n      IsOpenTableExpand: false,\n      // biến mở menu tại table\n      pos: {},\n      // vị trí của nút dropdown của table\n      filter: null,\n      // từ tìm kiếm\n      pageIndex: 1,\n      // vị trí trang\n      pageSize: 10,\n      // số trang\n      totalRecord: 0,\n      // tổng số bản ghi\n      IsShowPaging: false,\n      // có mở combobox chứa danh sách các lựa chọn phân trang\n      gender: [\"Nam\", \"Nữ\", \"Khác\"],\n      // mảng chứa giới tính\n      listSizePage: [10, 20, 30, 50, 100],\n      // mảng chứa số nhân viên trên / trang\n      IsShowModalDelete: false,\n      // có mở modal xóa\n      errMsg: \"\",\n      // thông báo lỗi\n      tickAll: 0,\n      // có chọn tất cả, 0 : không và 1 : đang chọn tất cả\n      IsShowDeleteMutile: false,\n      //biến mở nút xóa\n      employeeTicked: [],\n      // danh sách chứa các nhân viên được tích\n      isDouple: 0 // có nhân bản: 0: không, 1: có\n\n    };\n  },\n\n  // 1. before created\n\n  /*\n   ** Trước khi được khởi tạo, chưa khởi tạo dữ liệu và dom\n   */\n  beforeCreate() {},\n\n  // 2. created\n\n  /*\n   ** Khi được khởi tạo, có thể lấy dữ liệu từ data nhưng dom chưa được khởi tạo\n   */\n  created() {\n    this.loadData();\n  },\n\n  // 3. before mount\n  beforeMount() {},\n\n  // 4. mounted\n\n  /*\n   ** Data và dom đều đã được khởi tạo\n   */\n  mounted() {\n    this.$refs.detailBtnRow = this.$el;\n  },\n\n  //5. beforeUpdate\n  beforeUpdate() {},\n\n  // 6. Updated\n  updated() {},\n\n  directives: {\n    ClickOutside\n  }\n};","map":{"version":3,"mappings":"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","names":["axios","formatDate","formatCurrency","formatPhoneNumber","EmployeeDetail","PreLoadingTable","TableExpand","ClickOutside","baseApi","ModalButtons","createToast","MessageApi","Notifications","saveExcel","name","components","methods","exportExcel","data","employees","fileName","columns","field","title","reloadData","loadData","btnAddClick","showDialog","employeeSelected","editMore","isShow","IsShowDialog","rowOnClick","emp","rowOnDbClick","$nextTick","document","getElementById","focus","detailBtnRow","event","IsOpenTableExpand","btnDetail","target","getBoundingClientRect","pos","top","left","hideDetailBtnRow","btnDelete","errMsg","mess","ConfimDelete","employeeCode","push","IsShowModalDelete","confirmDelete","url","employeeId","Delete","confirmCancleDelete","btnImportClick","$refs","fileImport","click","btnImportFileClick","formData","FormData","file","files","append","console","log","me","IsCompleteData","config","method","pageIndex","pageSize","headers","accept","filter","then","res","totalRecord","catch","er","btnPaggingDetail","IsShowPaging","btnPagging","size","btnNextPageClick","btnPrevPageClick","btnSearchClick","value","chooseALlClick","tickAll","employeeTicked","forEach","length","IsShowDeleteMutile","showBtnDelete","querySelector","tickEmployeeClick","id","listId","index","indexOf","splice","index_","row","getElementsByClassName","children","deleteMutileClick","item","ex","btnDouple","isDouple","btnTableExpand","alert","exportData","table","rows","i","column1","column2","cells","innerText","toString","column3","column4","column5","csvContent","rowArray","join","encodedUri","encodeURI","link","createElement","setAttribute","body","appendChild","IsShowDetailBtn","gender","listSizePage","beforeCreate","created","beforeMount","mounted","$el","beforeUpdate","updated","directives"],"sourceRoot":"","sources":["E:\\MisaProject\\MISA_AMIS\\MISA_AMIS_FE\\misa-amis\\src\\pages\\Employee\\PageEmployee.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"content-dashboard\">\n      <div class=\"top-content-list\">\n        <div class=\"title1-content-list\">Nhân viên</div>\n\n        <div class=\"button-content\">\n          <div\n            class=\"b-button button-add\"\n            id=\"btnHeaderAdd\"\n            @click=\"btnAddClick\"\n          >\n            <span>Thêm mới nhân viên</span>\n          </div>\n        </div>\n\n      </div>\n\n      <div class=\"top-content-list top-content2-list\">\n        <div class=\"icon-header icon-left\"></div>\n\n        <div class=\"content2-title\">Tất cả danh mục</div>\n      </div>\n      <div class=\"table-dashboard\">\n        <div class=\"top-table-dashboard\">\n          <div\n            class=\"button-dropdown button-header-extension\"\n            @click=\"showBtnDelete\"\n          >\n            <span>Thực hiện hàng loạt</span>\n            <div class=\"icon-dropdown icon-dropdown-grey\"></div>\n          </div>\n          <div\n            class=\"delete-mutiple-row\"\n            v-if=\"IsShowDeleteMutile\"\n            @click=\"deleteMutileClick\"\n          >\n            Xóa\n          </div>\n          <div class=\"top-right-table-dashboard\">\n            <div class=\"header-input input-search\">\n              <input\n                placeholder=\"Nhập từ khóa tìm kiếm\"\n                type=\"text\"\n                class=\"input-search-content\"\n                id=\"search\"\n                @change=\"btnSearchClick\"\n              />\n              <div class=\"header-input-icon icon-search\"></div>\n            </div>\n            <div class=\"top-button-table\">\n              <div class=\"top-button-table-content\" title=\"Tính năng mở rộng\">\n                <div\n                  class=\"icon-loadData icon-header\"\n                  id=\"btnLoadData\"\n                  @click=\"reloadData()\"\n                ></div>\n              </div>\n\n              <div class=\"top-button-table-content\" title=\"Thiết lập\">\n                <div\n                  class=\"icon-exportExcel icon-header\"\n                  @click=\"btnImportClick()\"\n                ></div>\n              </div>\n\n              <div\n                class=\"top-button-table-content\"\n                title=\"Trao đổi giữa DN và KT\"\n              >\n                <div class=\"icon-setting icon-header\" @click=\"exportData\"></div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- PreLoadingTableTable -->\n        <!-- table list -->\n        <!-- 30 trường dữ liệu -->\n        <!-- thêm một trường tick dữ liệu -->\n        <div class=\"main-table-dashboard\">\n          <table class=\"list-table\" id=\"tableEmployee\">\n            <thead class=\"head-table-list\">\n              <tr>\n                <th class=\"row-tick-table\">\n                  <div class=\"checkbox-row\">\n                    <input\n                      type=\"checkbox\"\n                      style=\"order: 4\"\n                      class=\"checkbox-table\"\n                      id=\"tickboxRow\"\n                      :checked=\"tickAll == 1\"\n                    />\n                    <span\n                      class=\"custom-checkbox checkbox-custom-table\"\n                      @click=\"chooseALlClick(employees)\"\n                    >\n                      <span class=\"custom-checkbox-inner\">\n                        <div class=\"icon-tick\"></div>\n                      </span>\n                    </span>\n                  </div>\n                </th>\n\n                <th class=\"table-employeeCode\">Mã nhân viên</th>\n                <th class=\"table-employeeName\">Tên nhân viên</th>\n                <th class=\"table-gender\" style=\"width: 15px !important\">\n                  Giới tính\n                </th>\n                <th class=\"table-dateOfBirth\">Ngày sinh</th>\n                <th class=\"table-identityNumber\" title=\"Số chứng minh nhân dân\">\n                  Số CMND\n                </th>\n                <th style=\"width: 50px !important\">Đơn vị</th>\n\n                <th>Chức danh</th>\n\n                <th class=\"table-button-function\">Chức năng</th>\n              </tr>\n            </thead>\n\n            <tbody class=\"body-table-list\">\n              <tr\n                v-for=\"emp in employees\"\n                :key=\"emp.employeeId\"\n                @click=\"rowOnClick(emp)\"\n                @dblclick=\"rowOnDbClick(emp)\"\n                class=\"tr-table-list\"\n              >\n                <td class=\"row-tick-table\">\n                  <div class=\"checkbox-row\">\n                    <input\n                      type=\"checkbox\"\n                      style=\"order: 4\"\n                      class=\"checkbox-table\"\n                      id=\"tickboxRow\"\n                      :checked=\"tickAll == 1\"\n                      @click=\"tickEmployeeClick(emp.employeeId)\"\n                    />\n                    <span\n                      style=\"order: 1\"\n                      class=\"custom-checkbox checkbox-custom-table\"\n                    >\n                      <span class=\"custom-checkbox-inner\">\n                        <div class=\"icon-tick\"></div>\n                      </span>\n                    </span>\n                  </div>\n                </td>\n\n                <td class=\"table-employeeCode\">{{ emp.employeeCode }}</td>\n                <td class=\"table-employeeName\">{{ emp.employeeName }}</td>\n                <td class=\"table-gender\" style=\"width: 15px !important\">\n                  {{ gender[emp.gender - 1] }}\n                </td>\n                <td class=\"table-dateOfBirth\">\n                  {{ formatDate(emp.dateOfBirth) }}\n                </td>\n                <td class=\"table-identityNumber\">{{ emp.identityCard }}</td>\n\n                <td class=\"table-employeePosition\">\n                  {{ emp.departmentName }}\n                </td>\n                <td class=\"table-positionId\">{{ emp.postionName }}</td>\n\n                <td class=\"table-button-function\">\n                  <div class=\"btn-function-table\">\n                    <span id=\"editForm\" @click=\"rowOnDbClick(emp)\">Sửa</span>\n                    <div\n                      class=\"icon-down-edit\"\n                      id=\"icon-down-edit\"\n                      v-on:click=\"detailBtnRow\"\n                      ref=\"detailBtnRow\"\n                      v-click-outside=\"hideDetailBtnRow\"\n                    ></div>\n                  </div>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n\n        <!-- Footer Table -->\n        <div class=\"footer-table-dashboard\">\n          <div class=\"left-footer-table-dashboard\" id=\"total-list\">\n            <span>`Tổng số bản ghi: `</span>\n            <span style=\"font-weight: 900\"> {{ totalRecord }} </span>\n          </div>\n\n          <div class=\"right-footer-table-dashboard\">\n            <div class=\"custom-list-page\">\n              <div class=\"button-custom-list-page\" @click=\"btnPaggingDetail\">\n                <span>{{ pageSize }} bản ghi trên 1 trang</span>\n                <div class=\"button-drop-down\">\n                  <div\n                    class=\"icon-dropdown icon-dropdown\"\n                    id=\"iconPaging\"\n                  ></div>\n                </div>\n              </div>\n\n              <div class=\"custom-list-page-detail\" v-if=\"IsShowPaging\">\n                <div\n                  v-for=\"size in listSizePage\"\n                  :key=\"size\"\n                  @click=\"btnPagging(size)\"\n                >\n                  {{ size }} bản ghi trên 1 trang\n                </div>\n              </div>\n            </div>\n\n            <div class=\"list-page\">\n              <span class=\"pre-page\" @click=\"btnPrevPageClick\">Trước</span>\n              <span class=\"page-first\">1</span>\n              <span\n                v-show=\"\n                  pageIndex != 1 &&\n                  pageIndex != (totalRecord / pageSize).toFixed()\n                \"\n                >...</span\n              >\n              <span\n                class=\"page-persent\"\n                v-show=\"\n                  pageIndex != 1 &&\n                  pageIndex != (totalRecord / pageSize).toFixed()\n                \"\n                >{{ pageIndex }}</span\n              >\n              <span>...</span>\n              <span class=\"page-last\">{{\n                (totalRecord / pageSize).toFixed()\n              }}</span>\n              <span class=\"next-page\" @click=\"btnNextPageClick\">Sau</span>\n            </div>\n          </div>\n        </div>\n      </div>\n      <!-- <EmployeeList /> -->\n    </div>\n    <PreLoadingTable v-if=\"IsCompleteData\" />\n    <!-- <div>\n      <div class=\"detail-function-table\">\n        <div class=\"detail-btn\">Nhân bản</div>\n        <div class=\"detail-btn\">Sửa</div>\n        <div class=\"detail-btn\">Ngừng sử dụng</div>\n      </div>\n    </div> -->\n    <TableExpand\n      v-click-outside=\"hideDetailBtnRow\"\n      v-if=\"IsOpenTableExpand\"\n      :pos=\"pos\"\n      @btnDelete=\"btnDelete\"\n      @btnDouple=\"btnDouple\"\n      @btnTableExpand=\"btnTableExpand\"\n    />\n\n    <EmployeeDetail\n      v-if=\"IsShowDialog\"\n      :employeeDetail=\"employeeSelected\"\n      :editMore=\"editMore\"\n      :isDouple=\"isDouple\"\n      @closeDialog=\"showDialog\"\n      @reloadData=\"reloadData\"\n      @saveAndAdd=\"btnAddClick\"\n    />\n\n    <ModalButtons\n      v-if=\"IsShowModalDelete\"\n      :errMsg=\"errMsg\"\n      @confirmDelete=\"confirmDelete\"\n      @confirmCancleDelete=\"confirmCancleDelete\"\n    />\n    <input\n      ref=\"fileImport\"\n      id=\"fileImport\"\n      type=\"file\"\n      @click=\"btnImportFileClick\"\n    />\n  </div>\n</template>\n<style>\n@import url(../../css/layout/header.css);\n@import url(../../css/layout/content.css);\n@import url(../../css/base/table.css);\n@import url(../../css/base/button.css);\n@import url(../../css/layout/customer.css);\n</style>\n<script>\n// import EmployeeList from \"../../pages/Employee/EmployeeList.vue\";\n// import EmployeeHeader from \"../../pages/Employee/EmployeeHeader.vue\";\nimport axios from \"axios\";\nimport formatDate from \"../../extension/formatDate\";\nimport formatCurrency from \"../../extension/formatCurrency\";\nimport formatPhoneNumber from \"../../extension/fomartPhoneNumber\";\nimport EmployeeDetail from \"./EmployeeDetail.vue\";\nimport PreLoadingTable from \"../../components/base/PreLoadingTable.vue\";\nimport TableExpand from \"../../components/base/TableExpand.vue\";\n// import { createToast } from \"mosha-vue-toastify\";\nimport \"mosha-vue-toastify/dist/style.css\";\nimport ClickOutside from \"vue-click-outside\";\nimport baseApi from \"../../base/baseApi/baseApi\";\nimport ModalButtons from \"../../components/base/ModalButtons.vue\";\nimport { createToast } from \"mosha-vue-toastify\";\n\n// Enums\nimport MessageApi from \"../../Enums/enumMessageApi\";\nimport Notifications from \"../../Enums/enumNotification\";\nimport { saveExcel } from \"@progress/kendo-vue-excel-export\";\n\nexport default {\n  name: \"EmployeeList\",\n  components: {\n    EmployeeDetail,\n    PreLoadingTable,\n    TableExpand,\n    ModalButtons,\n  },\n\n  methods: {\n    exportExcel() {\n      saveExcel({\n        data: this.employees,\n        fileName: \"myFile\",\n        columns: [\n          { field: \"STT\" },\n          { field: \"Mã nhân viên\", title: \"Nhân viên\" },\n          { field: \"Tên nhân viên\", title: \"Nhân viên\" },\n          { field: \"Giới tính\", title: \"Nhân viên\" },\n          { field: \"Ngày sinh\", title: \"Nhân viên\" },\n          { field: \"Chức danh\", title: \"Nhân viên\" },\n          { field: \"Tên đơn vị\", title: \"Nhân viên\" },\n          { field: \"Tên ngân hàng\", title: \"Nhân viên\" },\n          { field: \"Số tài khoản\", title: \"Nhân viên\" },\n        ],\n      });\n    },\n    baseApi,\n\n    formatDate,\n\n    formatCurrency,\n\n    formatPhoneNumber,\n\n    /*\n     ** Reload lại trang\n     ** Author PQBinh(10/7/2022)\n     */\n    reloadData() {\n      // console.log(\"reload\");\n      this.loadData();\n    },\n\n    // Khi bấm vào nút thêm mới nhân viên sẽ   mở ra dialog và lấy mã nhân viên mới\n    //Author PQBinh(10/7/2022)\n    btnAddClick() {\n      this.showDialog(true);\n      this.employeeSelected = {};\n      this.editMore = 0;\n    },\n\n    // gán giá trị cho biến IshowDiaLog\n    //Author PQBinh(10/7/2022)\n    showDialog(isShow) {\n      this.IsShowDialog = isShow;\n    },\n\n    // khi click vào 1 hàng sẽ đặt giá trị cho biến employeeS Selected\n    //Author PQBinh(10/7/2022)\n    rowOnClick(emp) {\n      this.employeeSelected = emp;\n    },\n\n    /*\n     ** Khi double click vào dòng của bảng sẽ hiện lên chi tiết nhân viên\n     ** Author PQBinh(10/7/2022)\n     */\n    rowOnDbClick(emp) {\n      this.employeeSelected = emp;\n      this.IsShowDialog = true;\n      this.editMore = 1;\n      this.$nextTick(function () {\n        document.getElementById(\"formCode\").focus();\n      });\n    },\n\n    // Khi bấm vào nút xổ xuống sẽ hiện ra chi tiết các nút trong bảng table\n    //Author PQBinh(10/7/2022)\n    detailBtnRow: function (event) {\n      this.IsOpenTableExpand = true;\n      var btnDetail = event.target.getBoundingClientRect();\n      this.pos.top = btnDetail.top + 20;\n      this.pos.left = btnDetail.left - 50;\n    },\n    hideDetailBtnRow() {\n      this.IsOpenTableExpand = false;\n    },\n\n    //Xóa một nhân viên được chọn\n    // author PQBinh (10/7/2022)\n    btnDelete() {\n      this.IsOpenTableExpand = false;\n      this.errMsg = [];\n      var mess = `${Notifications.ConfimDelete} <${this.employeeSelected.employeeCode}> không? `;\n      this.errMsg.push(mess);\n      this.IsShowModalDelete = true;\n    },\n\n    // Xác nhận xóa nhân viên đó khi modal hiện lên\n    //Author PQBinh(10/7/2022)\n    confirmDelete() {\n      var url = `http://localhost:5240/api/v1/Employees?id=${this.employeeSelected.employeeId}`;\n      this.baseApi(\"delete\", url, this.employeeSelected.employeeId);\n      createToast(MessageApi.Delete);\n\n      this.IsShowModalDelete = false;\n      this.reloadData();\n    },\n\n    // Xác nhận hủy khi modal thông báo có xác nhận xóa nhân viên đó không\n    // Author PQBinh(10/7/2022)\n    confirmCancleDelete() {\n      this.IsShowModalDelete = false;\n    },\n\n    /*\n     ** Khi bấm vào nút import sẽ chọn file để import\n     ** Author PQBinh(10/7/2022)\n     */\n    btnImportClick() {\n      this.$refs.fileImport.click();\n    },\n\n    // Lấy file chọn khi import để gửi lên Api\n    //Author PQBinh(10/7/2022)\n    btnImportFileClick: function () {\n      var formData = new FormData();\n      var file = document.getElementById(\"fileImport\").files[0];\n      formData.append(\"fileImport\", file);\n      console.log(formData);\n      // try {\n      //   axios\n      //     .post(\"http://localhost:5240/api/v1/Employees/import\", formData, {\n      //       headers: {\n      //         \"Content-Type\": \"multipart/form-data\",\n      //       },\n      //     })\n      //     .then(function (res) {\n      //       createToast(MessageApi.Post);\n      //       console.log(res);\n      //     });\n      // } catch (er) {\n      //   console.log(er);\n      // }\n      // console.log(document.getElementById(\"fileImport\").files[0]);\n    },\n\n    /*\n     ** Load dữ liệu với các dữ liệu như tìm kiếm, số trang\n     ** Author PQBinh(10/7/2022)\n     */\n    loadData() {\n      var me = this;\n      me.IsCompleteData = true;\n\n      try {\n        var config = {\n          method: \"get\",\n          url: `http://localhost:5240/api/v1/Employees/filter/?pageIndex=${me.pageIndex}&pageSize=${me.pageSize}`,\n          headers: {\n            \"Content-Type\": \"application/json\",\n            accept: \"application/json\",\n          },\n        };\n        if (me.filter != null) {\n          config.url += `&filter=${me.filter}`;\n        }\n        axios(config)\n          .then(function (res) {\n            me.employees = res.data.data;\n            me.totalRecord = res.data.totalRecord;\n            me.IsCompleteData = false;\n          })\n          .catch(function (res) {\n            console.log(res);\n          });\n      } catch (er) {\n        console.log(er);\n      }\n      //Kiểm tra xem pageIndex có phải 1 hay trang cuối cùng hay không để thêm css\n    },\n\n    /*\n     ** hiện các lựa chọn của pagging\n     ** Author PQBinh(10/7/2022)\n     */\n    btnPaggingDetail() {\n      this.IsShowPaging = !this.IsShowPaging;\n\n      //\n    },\n\n    /*\n     ** phân trang với kích thước trang là tham số truyền vào\n     ** Author PQBinh(10/7/2022)\n     */\n    btnPagging(size) {\n      var me = this;\n      me.pageSize = size;\n      me.loadData();\n      me.btnPaggingDetail();\n    },\n\n    /*\n     ** Khi bấm vào nút tiếp để sang trang tiếp\n     ** Author PQBinh(10/7/2022)\n     */\n    btnNextPageClick() {\n      var me = this;\n      if (me.pageIndex < me.totalRecord / me.pageSize) {\n        me.pageIndex = me.pageIndex + 1;\n        me.loadData();\n      }\n    },\n\n    /*\n     ** Khi bấm vào nút trước để quay lại trang trước\n     ** Author PQBinh(10/7/2022)\n     */\n    btnPrevPageClick() {\n      var me = this;\n      if (me.pageIndex > 1) {\n        me.pageIndex = me.pageIndex - 1;\n        me.loadData();\n      }\n    },\n\n    /*\n     ** Khi bấm vào nút tìm kiếm dữ liệu employe với từ tìm kiếm\n     ** Author PQBinh(10/7/2022)\n     */\n    btnSearchClick() {\n      this.filter = document.getElementById(\"search\").value;\n      this.pageIndex = 1;\n      this.loadData();\n    },\n\n    // Khi bấm vào nút chọn tất cả của table\n    // param: employee: tất cả nhân viên hiện có trên bảng\n    //Author PQBinh(10/7/2022)\n    chooseALlClick(employees) {\n      if (this.tickAll == 1) {\n        this.tickAll = 0;\n        this.employeeTicked = [];\n      } else {\n        this.tickAll = 1;\n        employees.forEach((emp) => {\n          this.employeeTicked.push(emp.employeeId);\n          return emp.employeeId;\n        });\n      }\n      if (this.employeeTicked.length == 0) {\n        this.IsShowDeleteMutile = false;\n      }\n    },\n\n    // Hiện ra nút xóa hàng loạt\n    //Author PQBinh(10/7/2022)\n    showBtnDelete() {\n      if (document.querySelector(\"#tickboxRow:checked\") != null) {\n        this.IsShowDeleteMutile = !this.IsShowDeleteMutile;\n      }\n    },\n\n    // Khi bấm tích chọn của 1 hàng table sẽ tích chọn hàng đó nếu chưa có thì sẽ thêm vào ,\n    // nếu đã có sẽ bỏ ra khỏi danh sách các hàng được tích chọn\n    //params: id: id nút của tích chọn\n    //Author PQBinh(10/7/2022)\n    tickEmployeeClick(id) {\n      var listId = this.employeeTicked;\n      var index = listId.indexOf(id);\n      // var row = document.getElementsByClassName(\"body-table-list\");\n      // console.log(\"index\", index, \"/n row\", row[0].children[0]);\n\n      if (index == -1) {\n        listId.push(id);\n      } else {\n        listId.splice(index, 1);\n      }\n      this.employeeSelected = listId;\n      var index_ = listId.indexOf(id);\n      var row = document.getElementsByClassName(\"body-table-list\");\n\n      row[0].children[index_].getElementsByClassName(\"row-tick-table\").focus;\n\n      if (listId.length == 0) {\n        this.IsShowDeleteMutile = false;\n      }\n    },\n\n    //Khi nút xóa hàng loạt được click sẽ xác nhận xóa các nhân viên được tích chọn\n    //Author PQBinh(10/7/2022)\n    deleteMutileClick() {\n      try {\n        this.employeeTicked.forEach((item) => {\n          var url = `http://localhost:5240/api/v1/Employees?id=${item}`;\n          this.baseApi(\"delete\", url, item);\n        });\n        createToast(MessageApi.Delete);\n        this.IsShowDeleteMutile = false;\n      } catch (ex) {\n        console.log(ex);\n      }\n    },\n\n    //Khi nút nhân bản được click\n    //Author PQBinh(10/7/2022)\n    btnDouple() {\n      var me = this;\n      me.rowOnDbClick(me.employeeSelected);\n      this.IsOpenTableExpand = false;\n      me.isDouple = 1;\n    },\n\n    // Khi nút ngừng phát triển được click\n    //Author PQBinh(10/7/2022)\n    btnTableExpand() {\n      this.IsOpenTableExpand = false;\n      alert(\"Tính năng đang được phát triển\");\n    },\n\n    //Xuất khẩu dữ liệu ra file excel\n    //Author PQBinh - 24/7/2022\n    exportData() {\n      /* Get the HTML data using Element by Id */\n      var table = document.getElementById(\"tableEmployee\");\n\n      /* Declaring array variable */\n      var rows = [];\n\n      //header của table\n      rows.push([\n        \"STT\",\n        \"Mã nhân viên\",\n        \"Tên nhân viên\",\n        \"Giới tính\",\n        \"Ngày sinh\",\n        \"Chức danh\",\n        \"Tên đơn vị\",\n        \"Số tài khoản\",\n        \"Tên ngân hàng\",\n      ]);\n      //iterate through rows of table\n      for (var i = 1, row; (row = table.rows[i]); i++) {\n        //rows would be accessed using the \"row\" variable assigned in the for loop\n        //Get each cell value/column from the row\n        let column1 = i;\n        let column2 = row.cells[1].innerText.toString();\n        let column3 = row.cells[2].innerText.toString();\n        let column4 = row.cells[3].innerText.toString();\n        let column5 = row.cells[4].innerText.toString();\n\n        /* add a new records in the array */\n        rows.push([column1, column2, column3, column4, column5]);\n      }\n      var csvContent = \"data:text/csv;charset=utf-8,\";\n      /* add the column delimiter as comma(,) and each row splitted by new line character (\\n) */\n      rows.forEach(function (rowArray) {\n        row = rowArray.join(\",\");\n        csvContent += row + \"\\r\\n\";\n      });\n\n      console.log(csvContent);\n      // create a hidden <a> DOM node and set its download attribute */\n      var encodedUri = encodeURI(csvContent);\n      var link = document.createElement(\"a\");\n      link.setAttribute(\"href\", encodedUri);\n      link.setAttribute(\"download\", \"test.csv\");\n      document.body.appendChild(link);\n      // /* download the data file named \"Stock_Price_Report.csv\" */\n      link.click();\n\n      // var CsvString = \"\";\n      // CsvString = \"data:application/csv,\" + encodeURIComponent(rows);\n      // var x = document.createElement(\"A\");\n      // x.setAttribute(\"href\", CsvString);\n      // x.setAttribute(\"download\", \"somedata.csv\");\n      // document.body.appendChild(x);\n      // x.click();\n    },\n  },\n  data() {\n    return {\n      IsShowDialog: false, // biến có mở dialog\n      IsShowDetailBtn: 0, // biến có mở nút xóa\n      employees: [], // danh sách các nhân viên được trả về khi loadData\n      employeeSelected: {}, // đối tượng nhân viên được click\n      editMore: 0, // biến kiểm tra có phải sửa hay thêm mới dữ liệu: sửa là 0;\n      IsCompleteData: true, // biến load dữ liệu thành công\n      IsOpenTableExpand: false, // biến mở menu tại table\n      pos: {}, // vị trí của nút dropdown của table\n      filter: null, // từ tìm kiếm\n      pageIndex: 1, // vị trí trang\n      pageSize: 10, // số trang\n      totalRecord: 0, // tổng số bản ghi\n      IsShowPaging: false, // có mở combobox chứa danh sách các lựa chọn phân trang\n      gender: [\"Nam\", \"Nữ\", \"Khác\"], // mảng chứa giới tính\n      listSizePage: [10, 20, 30, 50, 100], // mảng chứa số nhân viên trên / trang\n      IsShowModalDelete: false, // có mở modal xóa\n      errMsg: \"\", // thông báo lỗi\n      tickAll: 0, // có chọn tất cả, 0 : không và 1 : đang chọn tất cả\n      IsShowDeleteMutile: false, //biến mở nút xóa\n      employeeTicked: [], // danh sách chứa các nhân viên được tích\n      isDouple: 0, // có nhân bản: 0: không, 1: có\n    };\n  },\n\n  // 1. before created\n  /*\n   ** Trước khi được khởi tạo, chưa khởi tạo dữ liệu và dom\n   */\n  beforeCreate() {},\n  // 2. created\n  /*\n   ** Khi được khởi tạo, có thể lấy dữ liệu từ data nhưng dom chưa được khởi tạo\n   */\n  created() {\n    this.loadData();\n  },\n\n  // 3. before mount\n  beforeMount() {},\n  // 4. mounted\n  /*\n   ** Data và dom đều đã được khởi tạo\n   */\n  mounted() {\n    this.$refs.detailBtnRow = this.$el;\n  },\n  //5. beforeUpdate\n  beforeUpdate() {},\n  // 6. Updated\n  updated() {},\n  directives: {\n    ClickOutside,\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}