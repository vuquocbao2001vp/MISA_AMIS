{"ast":null,"code":"import { createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-23071502\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"checkbox-container\"\n};\nconst _hoisted_2 = [\"value\"];\n\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"checkmark\"\n}, [/*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"icon-checkbox\"\n})], -1\n/* HOISTED */\n));\n\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"\"\n}, null, -1\n/* HOISTED */\n));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"input\", {\n    type: \"checkbox\",\n    value: $props.isCheck\n  }, null, 8\n  /* PROPS */\n  , _hoisted_2), _hoisted_3]), _hoisted_4], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;;;;EACSA,KAAK,EAAC;;;;gEAEPC,oBAAkE,MAAlE,EAAkE;EAA5DD,KAAK,EAAC;AAAsD,CAAlE,EAAuB,cAACC,oBAAmC,MAAnC,EAAmC;EAA7BD,KAAK,EAAC;AAAuB,CAAnC,CAAD,CAAvB;;AAAA;;gEAEJC,oBAAoB,KAApB,EAAoB;EAAfD,KAAK,EAAC;AAAS,CAApB,EAAa,IAAb,EAAa;AAAA;AAAb;;;6DAJAC,oBAGM,KAHN,cAGM,CAFFA,oBAA8C,OAA9C,EAA8C;IAAvCC,IAAI,EAAC,UAAkC;IAAhBC,KAAK,EAAEC;EAAS,CAA9C;;EAAA,aAEE,EADFC,UACE,CAHN,GAIAC","names":["class","_createElementVNode","type","value","$props","_hoisted_3","_hoisted_4"],"sourceRoot":"","sources":["E:\\MisaProject\\MISA_AMIS\\MISA_AMIS_FE\\misa-amis\\src\\components\\base\\checkbox\\MCheckbox.vue"],"sourcesContent":["<template>\r\n    <div class=\"checkbox-container\">\r\n        <input type=\"checkbox\" v-bind:value=\"isCheck\">\r\n        <span class=\"checkmark\"><span class=\"icon-checkbox\"></span></span>\r\n    </div>\r\n    <div class=\"\"></div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    props: ['isCheck', 'title']\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.checkbox-container {\r\n    display: block;\r\n    position: relative;\r\n    cursor: pointer;\r\n    height: 18px;\r\n    width: 18px;\r\n    box-sizing: border-box;\r\n}\r\n.checkbox-container input {\r\n    top: 0;\r\n    left: 0;\r\n    position: absolute;\r\n    opacity: 0;\r\n    cursor: pointer;\r\n    z-index: 2;\r\n}\r\n.checkmark {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 18px;\r\n    height: 18px;\r\n    border-radius: 2px;\r\n    border: 1px solid #afafaf;\r\n    transition: all .2s ease;\r\n    transform: rotate(-90deg);\r\n    background-color: #fff;\r\n    z-index: 1;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n}\r\n.checkbox-container input:checked ~ .checkmark {\r\n    border-color: #2ca01c;\r\n    transform: rotate(0deg);\r\n    background-color: #fff;\r\n}\r\n.checkbox-container input:checked ~ .checkmark .icon-checkbox {\r\n    background: url(../../../assets/img/Sprites.64af8f61.svg) no-repeat -1225px -363px;\r\n    width: 14px;\r\n    height: 11px;\r\n}\r\n.checkmark:after {\r\n  content: \"\";\r\n  position: absolute;\r\n  display: none;\r\n}\r\n.checkbox-container input:checked ~ .checkmark:after {\r\n  display: block;\r\n}\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}